
#sudo /etc/init.d/nginx start
#sudo cp -f /mnt/c/BMSTU_7sem_web/nginx/conf/nginx_for_ubuntu.conf /etc/nginx/nginx.conf

worker_processes  auto;



events {
    worker_connections  1024;
}


http {
	upstream backend {
		server 127.0.0.1:5000 weight=2;
		server 127.0.0.1:5004;
		server 127.0.0.1:5006;
	}
	
	upstream backend_solo {
		server 127.0.0.1:5000;
	}
    
    include       mime.types;
    default_type  application/octet-stream;


    sendfile        on;

    keepalive_timeout  65;



    server {
    
        listen 80;# ssl http2 default_server;
        server_name localhost;
        
        # https://localhost:5000/swagger/index.html
        # http://localhost/api/v1/index.html
        # https://localhost:5000/api/lifts/A3
        
        #http://localhost/api/v1/-> http://localhost/api/v1/index.html
        


#https://localhost:5000/api/Lifts/A0
# http://localhost/api/v1 -> http://localhost/swagger/index.html





        # Задание d
        # http://localhost/
        # Настроить / на отдачу статики (в будущем - SPA-приложения). 
        # Пока положить приветственный HTML (/static/index.html) с картинкой (static/img/image.jpg).
		location / {
			root /mnt/c/BMSTU_7sem_web/static;
		}
        
        # Задание e
        # http://localhost/test/
        # Настроить /test на отдачу той же страницы, что и /
        location /test {
            rewrite ^/test/(.*)$ /$1 last;
            #или: return 301 /;
        }
		
		
		
		
		
		location =/api/v1/ {
			proxy_no_cache 1;
			return 301 $scheme://$http_host/swagger/index.html;
		}	
		location /api/v1/ {
			proxy_no_cache 1;
			proxy_method GET;
			proxy_pass http://backend_solo/api/;
		}
		
		
		
		# Все что после v1/ будет дублировано в конец редиректа
        #location /api/v1/ {
        #    proxy_pass https://backend/api/;
         #   proxy_no_cache 1;

            #proxy_set_header Host $host;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header X-Real-IP $remote_addr;
        #}

#        location /swagger/ {
 #           proxy_pass https://backend/swagger/;
  #          proxy_no_cache 1;
   #     }
#
 #       location /api/ {
  #          proxy_pass https://backend/api/;
   #         proxy_no_cache 1;
    #    }
		
		
		
		
		
        
        # Задание g
        # http://localhost/status
        location = /status {
            stub_status;
        }


        

        
        #location = /api/v1/ {
		#	proxy_pass https://localhost:5000/swagger/index.html;
		#	proxy_no_cache 1;
		#}

        
    }


}
